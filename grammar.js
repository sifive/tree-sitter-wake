function binary(op, expr) {
  return seq(field('lhs', expr), field('operator', op), field('rhs', expr))
}

function left (n, op, expr) { return prec.left (n, binary(op, expr)) }
function right(n, op, expr) { return prec.right(n, binary(op, expr)) }

function prefix (n, op, expr) { return prec(n, seq(field('operator', op), field('operand', expr))) }
function postfix(n, op, expr) { return prec(n, seq(field('operand', expr), field('operator', op))) }

const operators = $ => [
  // operator,  left-associative, prefix
  // [ $.dot_op,         true,  true  ], -- must be special cased in tree-sitter
  [ $.composition_op, false, true  ], // future: left?
  [ $.unary_fn_op,    false, true  ], // future: left?
  [ $.exponent_op,    false, true  ], // future: postfix?
  [ $.muldiv_op,      true,  true  ],
  [ $.addsub_op,      true,  true  ],
  [ $.comparison_op,  true,  true  ],
  [ $.inequality_op,  false, true  ],
  [ $.and_op,         true,  true  ],
  [ $.or_op,          true,  true  ],
  [ $.currency_op,    false, true  ],
  [ $.lr_arrow_op,    true,  true  ],
  [ $.bi_arrow_op,    false, true  ],
  [ $.quantifier_op,  false, true  ], // future: left?
  [ $.colon_op,       true,  true  ],
  [ $.comma_op,       false, true  ], // future: postfix?
];

function unary_ops($, expr) {
  function to_unary([pattern, lft, pfx], i) {
    if (pfx) return prefix (100-2*i, pattern, expr);
    else     return postfix(100-2*i, pattern, expr);
  }
  const ops = operators($);
  return choice(...ops.map(to_unary));
}

function binary_ops($, expr) {
  function to_binary([pattern, lft, pfx], i) {
    if (lft) return left (99-2*i, pattern, expr);
    else     return right(99-2*i, pattern, expr);
  }
  const ops = operators($);
  return choice(...ops.map(to_binary));
}

// Unicode classes that wake uses (generated by classes.wake):
const id_mod  = '[\u02b0-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0300-\u036f\u0374\u037a\u0483-\u0489\u0559\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u0640\u064b-\u065f\u0670\u06d6-\u06dc\u06df-\u06e8\u06ea-\u06ed\u0711\u0730-\u074a\u07a6-\u07b0\u07eb-\u07f5\u07fa\u07fd\u0816-\u082d\u0859-\u085b\u08d3-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0971\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a70\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0c00-\u0c04\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e46-\u0e4e\u0eb1\u0eb4-\u0ebc\u0ec6\u0ec8-\u0ecd\u0f18\u0f19\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f\u109a-\u109d\u10fc\u135d-\u135f\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17d7\u17dd\u180b-\u180d\u1843\u1885\u1886\u18a9\u1920-\u192b\u1930-\u193b\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f\u1aa7\u1ab0-\u1ac0\u1b00-\u1b04\u1b34-\u1b44\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1be6-\u1bf3\u1c24-\u1c37\u1c78-\u1c7d\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1d2c-\u1d6a\u1d78\u1d9b-\u1df9\u1dfb-\u1dff\u2071\u207f\u2090-\u209c\u20d0-\u20f0\u2c7c\u2c7d\u2cef-\u2cf1\u2d6f\u2d7f\u2de0-\u2dff\u2e2f\u3005\u302a-\u302f\u3031-\u3035\u303b\u3099\u309a\u309d\u309e\u30fc-\u30fe\ua015\ua4f8-\ua4fd\ua60c\ua66f-\ua672\ua674-\ua67d\ua67f\ua69c-\ua69f\ua6f0\ua6f1\ua717-\ua71f\ua770\ua788\ua7f8\ua7f9\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8e0-\ua8f1\ua8ff\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9cf\ua9e5\ua9e6\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa70\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaadd\uaaeb-\uaaef\uaaf3-\uaaf6\uab5c-\uab5f\uab69\uabe3-\uabea\uabec\uabed\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\uff70\uff9e\uff9f\u{101fd}\u{102e0}\u{10376}-\u{1037a}\u{10a01}-\u{10a03}\u{10a05}\u{10a06}\u{10a0c}-\u{10a0f}\u{10a38}-\u{10a3a}\u{10a3f}\u{10ae5}\u{10ae6}\u{10d24}-\u{10d27}\u{10eab}\u{10eac}\u{10f46}-\u{10f50}\u{11000}-\u{11002}\u{11038}-\u{11046}\u{1107f}-\u{11082}\u{110b0}-\u{110ba}\u{11100}-\u{11102}\u{11127}-\u{11134}\u{11145}\u{11146}\u{11173}\u{11180}-\u{11182}\u{111b3}-\u{111c0}\u{111c9}-\u{111cc}\u{111ce}\u{111cf}\u{1122c}-\u{11237}\u{1123e}\u{112df}-\u{112ea}\u{11300}-\u{11303}\u{1133b}\u{1133c}\u{1133e}-\u{11344}\u{11347}\u{11348}\u{1134b}-\u{1134d}\u{11357}\u{11362}\u{11363}\u{11366}-\u{1136c}\u{11370}-\u{11374}\u{11435}-\u{11446}\u{1145e}\u{114b0}-\u{114c3}\u{115af}-\u{115b5}\u{115b8}-\u{115c0}\u{115dc}\u{115dd}\u{11630}-\u{11640}\u{116ab}-\u{116b7}\u{1171d}-\u{1172b}\u{1182c}-\u{1183a}\u{11930}-\u{11935}\u{11937}\u{11938}\u{1193b}-\u{1193e}\u{11940}\u{11942}\u{11943}\u{119d1}-\u{119d7}\u{119da}-\u{119e0}\u{119e4}\u{11a01}-\u{11a0a}\u{11a33}-\u{11a39}\u{11a3b}-\u{11a3e}\u{11a47}\u{11a51}-\u{11a5b}\u{11a8a}-\u{11a99}\u{11c2f}-\u{11c36}\u{11c38}-\u{11c3f}\u{11c92}-\u{11ca7}\u{11ca9}-\u{11cb6}\u{11d31}-\u{11d36}\u{11d3a}\u{11d3c}\u{11d3d}\u{11d3f}-\u{11d45}\u{11d47}\u{11d8a}-\u{11d8e}\u{11d90}\u{11d91}\u{11d93}-\u{11d97}\u{11ef3}-\u{11ef6}\u{16af0}-\u{16af4}\u{16b30}-\u{16b36}\u{16b40}-\u{16b43}\u{16f4f}\u{16f51}-\u{16f87}\u{16f8f}-\u{16f9f}\u{16fe0}\u{16fe1}\u{16fe3}\u{16fe4}\u{16ff0}\u{16ff1}\u{1bc9d}\u{1bc9e}\u{1d165}-\u{1d169}\u{1d16d}-\u{1d172}\u{1d17b}-\u{1d182}\u{1d185}-\u{1d18b}\u{1d1aa}-\u{1d1ad}\u{1d242}-\u{1d244}\u{1da00}-\u{1da36}\u{1da3b}-\u{1da6c}\u{1da75}\u{1da84}\u{1da9b}-\u{1da9f}\u{1daa1}-\u{1daaf}\u{1e000}-\u{1e006}\u{1e008}-\u{1e018}\u{1e01b}-\u{1e021}\u{1e023}\u{1e024}\u{1e026}-\u{1e02a}\u{1e130}-\u{1e13d}\u{1e2ec}-\u{1e2ef}\u{1e8d0}-\u{1e8d6}\u{1e944}-\u{1e94b}\u{e0100}-\u{e01ef}]';
const id_low  = '[\x5f\x61-\x7a\xa6\xa9\xaa\xae\xb0\xb5\xba\xdf-\xf6\xf8-\xff\u0101\u0103\u0105\u0107\u0109\u010b\u010d\u010f\u0111\u0113\u0115\u0117\u0119\u011b\u011d\u011f\u0121\u0123\u0125\u0127\u0129\u012b\u012d\u012f\u0131\u0133\u0135\u0137\u0138\u013a\u013c\u013e\u0140\u0142\u0144\u0146\u0148\u0149\u014b\u014d\u014f\u0151\u0153\u0155\u0157\u0159\u015b\u015d\u015f\u0161\u0163\u0165\u0167\u0169\u016b\u016d\u016f\u0171\u0173\u0175\u0177\u017a\u017c\u017e-\u0180\u0183\u0185\u0188\u018c\u018d\u0192\u0195\u0199-\u019b\u019e\u01a1\u01a3\u01a5\u01a8\u01aa\u01ab\u01ad\u01b0\u01b4\u01b6\u01b9-\u01bb\u01bd-\u01c3\u01c6\u01c9\u01cc\u01ce\u01d0\u01d2\u01d4\u01d6\u01d8\u01da\u01dc\u01dd\u01df\u01e1\u01e3\u01e5\u01e7\u01e9\u01eb\u01ed\u01ef\u01f0\u01f3\u01f5\u01f9\u01fb\u01fd\u01ff\u0201\u0203\u0205\u0207\u0209\u020b\u020d\u020f\u0211\u0213\u0215\u0217\u0219\u021b\u021d\u021f\u0221\u0223\u0225\u0227\u0229\u022b\u022d\u022f\u0231\u0233-\u0239\u023c\u023f\u0240\u0242\u0247\u0249\u024b\u024d\u024f-\u02af\u0371\u0373\u0377\u037b-\u037d\u0390\u03ac-\u03ce\u03d0\u03d1\u03d5-\u03d7\u03d9\u03db\u03dd\u03df\u03e1\u03e3\u03e5\u03e7\u03e9\u03eb\u03ed\u03ef-\u03f3\u03f5\u03f6\u03f8\u03fb\u03fc\u0430-\u045f\u0461\u0463\u0465\u0467\u0469\u046b\u046d\u046f\u0471\u0473\u0475\u0477\u0479\u047b\u047d\u047f\u0481\u0482\u048b\u048d\u048f\u0491\u0493\u0495\u0497\u0499\u049b\u049d\u049f\u04a1\u04a3\u04a5\u04a7\u04a9\u04ab\u04ad\u04af\u04b1\u04b3\u04b5\u04b7\u04b9\u04bb\u04bd\u04bf\u04c2\u04c4\u04c6\u04c8\u04ca\u04cc\u04ce\u04cf\u04d1\u04d3\u04d5\u04d7\u04d9\u04db\u04dd\u04df\u04e1\u04e3\u04e5\u04e7\u04e9\u04eb\u04ed\u04ef\u04f1\u04f3\u04f5\u04f7\u04f9\u04fb\u04fd\u04ff\u0501\u0503\u0505\u0507\u0509\u050b\u050d\u050f\u0511\u0513\u0515\u0517\u0519\u051b\u051d\u051f\u0521\u0523\u0525\u0527\u0529\u052b\u052d\u052f\u0560-\u0588\u058d\u058e\u05d0-\u05ea\u05ef-\u05f2\u060e\u060f\u0620-\u063f\u0641-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06de\u06e9\u06ee\u06ef\u06fa-\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f6\u0800-\u0815\u0840-\u0858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08c7\u0904-\u0939\u093d\u0950\u0958-\u0961\u0972-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fa\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b70\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0bf3-\u0bf8\u0bfa\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c7f\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d4f\u0d54-\u0d56\u0d5f-\u0d61\u0d79-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e45\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0edc-\u0edf\u0f00-\u0f03\u0f13\u0f15-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u109e\u109f\u10d0-\u10fa\u10fd-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u1399\u13f8-\u13fd\u1401-\u166d\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16f1-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17dc\u1820-\u1842\u1844-\u1878\u1880-\u1884\u1887-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1940\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19de-\u1a16\u1a20-\u1a54\u1b05-\u1b33\u1b45-\u1b4b\u1b61-\u1b6a\u1b74-\u1b7c\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c77\u1c80-\u1c88\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1d2b\u1d6b-\u1d77\u1d79-\u1d9a\u1e01\u1e03\u1e05\u1e07\u1e09\u1e0b\u1e0d\u1e0f\u1e11\u1e13\u1e15\u1e17\u1e19\u1e1b\u1e1d\u1e1f\u1e21\u1e23\u1e25\u1e27\u1e29\u1e2b\u1e2d\u1e2f\u1e31\u1e33\u1e35\u1e37\u1e39\u1e3b\u1e3d\u1e3f\u1e41\u1e43\u1e45\u1e47\u1e49\u1e4b\u1e4d\u1e4f\u1e51\u1e53\u1e55\u1e57\u1e59\u1e5b\u1e5d\u1e5f\u1e61\u1e63\u1e65\u1e67\u1e69\u1e6b\u1e6d\u1e6f\u1e71\u1e73\u1e75\u1e77\u1e79\u1e7b\u1e7d\u1e7f\u1e81\u1e83\u1e85\u1e87\u1e89\u1e8b\u1e8d\u1e8f\u1e91\u1e93\u1e95-\u1e9d\u1e9f\u1ea1\u1ea3\u1ea5\u1ea7\u1ea9\u1eab\u1ead\u1eaf\u1eb1\u1eb3\u1eb5\u1eb7\u1eb9\u1ebb\u1ebd\u1ebf\u1ec1\u1ec3\u1ec5\u1ec7\u1ec9\u1ecb\u1ecd\u1ecf\u1ed1\u1ed3\u1ed5\u1ed7\u1ed9\u1edb\u1edd\u1edf\u1ee1\u1ee3\u1ee5\u1ee7\u1ee9\u1eeb\u1eed\u1eef\u1ef1\u1ef3\u1ef5\u1ef7\u1ef9\u1efb\u1efd\u1eff-\u1f07\u1f10-\u1f15\u1f20-\u1f27\u1f30-\u1f37\u1f40-\u1f45\u1f50-\u1f57\u1f60-\u1f67\u1f70-\u1f7d\u1f80-\u1f87\u1f90-\u1f97\u1fa0-\u1fa7\u1fb0-\u1fb4\u1fb6\u1fb7\u1fbe\u1fc2-\u1fc4\u1fc6\u1fc7\u1fd0-\u1fd3\u1fd6\u1fd7\u1fe0-\u1fe7\u1ff2-\u1ff4\u1ff6\u1ff7\u2100\u2101\u2103-\u2106\u2108-\u210a\u210e\u210f\u2113\u2114\u2116\u2117\u211e-\u2123\u2125\u2127\u2129\u212e\u212f\u2134-\u213d\u2146-\u214a\u214c-\u214f\u2184\u218a\u218b\u2195-\u2199\u219c-\u219f\u21a1\u21a2\u21a4\u21a5\u21a7-\u21ad\u21af-\u21cd\u21d0\u21d1\u21d3\u21d5-\u21f3\u2202\u2205-\u2207\u221e\u223f\u22ee-\u22f1\u2300-\u2307\u230c-\u231f\u2322-\u2328\u232b-\u237b\u237d-\u239a\u23b4-\u23db\u23e2-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u266e\u2670-\u2767\u2794-\u27c1\u2800-\u28ff\u29b0-\u29b5\u29bd\u29c4\u29c5\u29c8-\u29cd\u29d6\u29d7\u29dd\u29de\u29e0\u29e8-\u29f3\u2b00-\u2b2f\u2b45\u2b46\u2b4d-\u2b73\u2b76-\u2b95\u2b97-\u2bff\u2c30-\u2c5e\u2c61\u2c65\u2c66\u2c68\u2c6a\u2c6c\u2c71\u2c73\u2c74\u2c76-\u2c7b\u2c81\u2c83\u2c85\u2c87\u2c89\u2c8b\u2c8d\u2c8f\u2c91\u2c93\u2c95\u2c97\u2c99\u2c9b\u2c9d\u2c9f\u2ca1\u2ca3\u2ca5\u2ca7\u2ca9\u2cab\u2cad\u2caf\u2cb1\u2cb3\u2cb5\u2cb7\u2cb9\u2cbb\u2cbd\u2cbf\u2cc1\u2cc3\u2cc5\u2cc7\u2cc9\u2ccb\u2ccd\u2ccf\u2cd1\u2cd3\u2cd5\u2cd7\u2cd9\u2cdb\u2cdd\u2cdf\u2ce1\u2ce3-\u2cea\u2cec\u2cee\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3006\u3012\u3013\u3020\u3036\u3037\u303c\u303e\u303f\u3041-\u3096\u309f\u30a1-\u30fa\u30ff\u3105-\u312f\u3131-\u318e\u3190\u3191\u3196-\u31e3\u31f0-\u321e\u322a-\u3247\u3250\u3260-\u327f\u328a-\u32b0\u32c0-\u3400\u4dbf-\u4e00\u9ffc\ua000-\ua014\ua016-\ua48c\ua490-\ua4c6\ua4d0-\ua4f7\ua500-\ua60b\ua610-\ua61f\ua62a\ua62b\ua641\ua643\ua645\ua647\ua649\ua64b\ua64d\ua64f\ua651\ua653\ua655\ua657\ua659\ua65b\ua65d\ua65f\ua661\ua663\ua665\ua667\ua669\ua66b\ua66d\ua66e\ua681\ua683\ua685\ua687\ua689\ua68b\ua68d\ua68f\ua691\ua693\ua695\ua697\ua699\ua69b\ua6a0-\ua6e5\ua723\ua725\ua727\ua729\ua72b\ua72d\ua72f-\ua731\ua733\ua735\ua737\ua739\ua73b\ua73d\ua73f\ua741\ua743\ua745\ua747\ua749\ua74b\ua74d\ua74f\ua751\ua753\ua755\ua757\ua759\ua75b\ua75d\ua75f\ua761\ua763\ua765\ua767\ua769\ua76b\ua76d\ua76f\ua771-\ua778\ua77a\ua77c\ua77f\ua781\ua783\ua785\ua787\ua78c\ua78e\ua78f\ua791\ua793-\ua795\ua797\ua799\ua79b\ua79d\ua79f\ua7a1\ua7a3\ua7a5\ua7a7\ua7a9\ua7af\ua7b5\ua7b7\ua7b9\ua7bb\ua7bd\ua7bf\ua7c3\ua7c8\ua7ca\ua7f6\ua7f7\ua7fa-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua828-\ua82b\ua836\ua837\ua839\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9e0-\ua9e4\ua9e7-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa6f\uaa71-\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb\uaadc\uaae0-\uaaea\uaaf2\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab60-\uab68\uab70-\uabe2\uac00\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufdfd\ufe70-\ufe74\ufe76-\ufefc\uff41-\uff5a\uff66-\uff6f\uff71-\uff9d\uffa0-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc\uffe4\uffe8\uffed\uffee\ufffc\ufffd\u{10000}-\u{1000b}\u{1000d}-\u{10026}\u{10028}-\u{1003a}\u{1003c}\u{1003d}\u{1003f}-\u{1004d}\u{10050}-\u{1005d}\u{10080}-\u{100fa}\u{10137}-\u{1013f}\u{10179}-\u{10189}\u{1018c}-\u{1018e}\u{10190}-\u{1019c}\u{101a0}\u{101d0}-\u{101fc}\u{10280}-\u{1029c}\u{102a0}-\u{102d0}\u{10300}-\u{1031f}\u{1032d}-\u{10340}\u{10342}-\u{10349}\u{10350}-\u{10375}\u{10380}-\u{1039d}\u{103a0}-\u{103c3}\u{103c8}-\u{103cf}\u{10428}-\u{1049d}\u{104d8}-\u{104fb}\u{10500}-\u{10527}\u{10530}-\u{10563}\u{10600}-\u{10736}\u{10740}-\u{10755}\u{10760}-\u{10767}\u{10800}-\u{10805}\u{10808}\u{1080a}-\u{10835}\u{10837}\u{10838}\u{1083c}\u{1083f}-\u{10855}\u{10860}-\u{10878}\u{10880}-\u{1089e}\u{108e0}-\u{108f2}\u{108f4}\u{108f5}\u{10900}-\u{10915}\u{10920}-\u{10939}\u{10980}-\u{109b7}\u{109be}\u{109bf}\u{10a00}\u{10a10}-\u{10a13}\u{10a15}-\u{10a17}\u{10a19}-\u{10a35}\u{10a60}-\u{10a7c}\u{10a80}-\u{10a9c}\u{10ac0}-\u{10ae4}\u{10b00}-\u{10b35}\u{10b40}-\u{10b55}\u{10b60}-\u{10b72}\u{10b80}-\u{10b91}\u{10c00}-\u{10c48}\u{10cc0}-\u{10cf2}\u{10d00}-\u{10d23}\u{10e80}-\u{10ea9}\u{10eb0}\u{10eb1}\u{10f00}-\u{10f1c}\u{10f27}\u{10f30}-\u{10f45}\u{10fb0}-\u{10fc4}\u{10fe0}-\u{10ff6}\u{11003}-\u{11037}\u{11083}-\u{110af}\u{110d0}-\u{110e8}\u{11103}-\u{11126}\u{11144}\u{11147}\u{11150}-\u{11172}\u{11176}\u{11183}-\u{111b2}\u{111c1}-\u{111c4}\u{111da}\u{111dc}\u{11200}-\u{11211}\u{11213}-\u{1122b}\u{11280}-\u{11286}\u{11288}\u{1128a}-\u{1128d}\u{1128f}-\u{1129d}\u{1129f}-\u{112a8}\u{112b0}-\u{112de}\u{11305}-\u{1130c}\u{1130f}\u{11310}\u{11313}-\u{11328}\u{1132a}-\u{11330}\u{11332}\u{11333}\u{11335}-\u{11339}\u{1133d}\u{11350}\u{1135d}-\u{11361}\u{11400}-\u{11434}\u{11447}-\u{1144a}\u{1145f}-\u{11461}\u{11480}-\u{114af}\u{114c4}\u{114c5}\u{114c7}\u{11580}-\u{115ae}\u{115d8}-\u{115db}\u{11600}-\u{1162f}\u{11644}\u{11680}-\u{116aa}\u{116b8}\u{11700}-\u{1171a}\u{1173f}\u{11800}-\u{1182b}\u{118c0}-\u{118df}\u{118ff}-\u{11906}\u{11909}\u{1190c}-\u{11913}\u{11915}\u{11916}\u{11918}-\u{1192f}\u{1193f}\u{11941}\u{119a0}-\u{119a7}\u{119aa}-\u{119d0}\u{119e1}\u{119e3}\u{11a00}\u{11a0b}-\u{11a32}\u{11a3a}\u{11a50}\u{11a5c}-\u{11a89}\u{11a9d}\u{11ac0}-\u{11af8}\u{11c00}-\u{11c08}\u{11c0a}-\u{11c2e}\u{11c40}\u{11c72}-\u{11c8f}\u{11d00}-\u{11d06}\u{11d08}\u{11d09}\u{11d0b}-\u{11d30}\u{11d46}\u{11d60}-\u{11d65}\u{11d67}\u{11d68}\u{11d6a}-\u{11d89}\u{11d98}\u{11ee0}-\u{11ef2}\u{11fb0}\u{11fd5}-\u{11fdc}\u{11fe1}-\u{11ff1}\u{12000}-\u{12399}\u{12480}-\u{12543}\u{13000}-\u{1342e}\u{14400}-\u{14646}\u{16800}-\u{16a38}\u{16a40}-\u{16a5e}\u{16ad0}-\u{16aed}\u{16b00}-\u{16b2f}\u{16b3c}-\u{16b3f}\u{16b45}\u{16b63}-\u{16b77}\u{16b7d}-\u{16b8f}\u{16e60}-\u{16e7f}\u{16f00}-\u{16f4a}\u{16f50}\u{17000}\u{187f7}\u{18800}-\u{18cd5}\u{18d00}\u{18d08}\u{1b000}-\u{1b11e}\u{1b150}-\u{1b152}\u{1b164}-\u{1b167}\u{1b170}-\u{1b2fb}\u{1bc00}-\u{1bc6a}\u{1bc70}-\u{1bc7c}\u{1bc80}-\u{1bc88}\u{1bc90}-\u{1bc99}\u{1bc9c}\u{1d000}-\u{1d0f5}\u{1d100}-\u{1d126}\u{1d129}-\u{1d164}\u{1d16a}-\u{1d16c}\u{1d183}\u{1d184}\u{1d18c}-\u{1d1a9}\u{1d1ae}-\u{1d1e8}\u{1d200}-\u{1d241}\u{1d245}\u{1d300}-\u{1d356}\u{1d41a}-\u{1d433}\u{1d44e}-\u{1d454}\u{1d456}-\u{1d467}\u{1d482}-\u{1d49b}\u{1d4b6}-\u{1d4b9}\u{1d4bb}\u{1d4bd}-\u{1d4c3}\u{1d4c5}-\u{1d4cf}\u{1d4ea}-\u{1d503}\u{1d51e}-\u{1d537}\u{1d552}-\u{1d56b}\u{1d586}-\u{1d59f}\u{1d5ba}-\u{1d5d3}\u{1d5ee}-\u{1d607}\u{1d622}-\u{1d63b}\u{1d656}-\u{1d66f}\u{1d68a}-\u{1d6a5}\u{1d6c2}-\u{1d6da}\u{1d6dc}-\u{1d6e1}\u{1d6fc}-\u{1d714}\u{1d716}-\u{1d71b}\u{1d736}-\u{1d74e}\u{1d750}-\u{1d755}\u{1d770}-\u{1d788}\u{1d78a}-\u{1d78f}\u{1d7aa}-\u{1d7c2}\u{1d7c4}-\u{1d7c9}\u{1d7cb}\u{1d800}-\u{1d9ff}\u{1da37}-\u{1da3a}\u{1da6d}-\u{1da74}\u{1da76}-\u{1da83}\u{1da85}\u{1da86}\u{1e100}-\u{1e12c}\u{1e14e}\u{1e14f}\u{1e2c0}-\u{1e2eb}\u{1e800}-\u{1e8c4}\u{1e922}-\u{1e943}\u{1ecac}\u{1ed2e}\u{1ee00}-\u{1ee03}\u{1ee05}-\u{1ee1f}\u{1ee21}\u{1ee22}\u{1ee24}\u{1ee27}\u{1ee29}-\u{1ee32}\u{1ee34}-\u{1ee37}\u{1ee39}\u{1ee3b}\u{1ee42}\u{1ee47}\u{1ee49}\u{1ee4b}\u{1ee4d}-\u{1ee4f}\u{1ee51}\u{1ee52}\u{1ee54}\u{1ee57}\u{1ee59}\u{1ee5b}\u{1ee5d}\u{1ee5f}\u{1ee61}\u{1ee62}\u{1ee64}\u{1ee67}-\u{1ee6a}\u{1ee6c}-\u{1ee72}\u{1ee74}-\u{1ee77}\u{1ee79}-\u{1ee7c}\u{1ee7e}\u{1ee80}-\u{1ee89}\u{1ee8b}-\u{1ee9b}\u{1eea1}-\u{1eea3}\u{1eea5}-\u{1eea9}\u{1eeab}-\u{1eebb}\u{1f000}-\u{1f02b}\u{1f030}-\u{1f093}\u{1f0a0}-\u{1f0ae}\u{1f0b1}-\u{1f0bf}\u{1f0c1}-\u{1f0cf}\u{1f0d1}-\u{1f0f5}\u{1f10d}-\u{1f1ad}\u{1f1e6}-\u{1f202}\u{1f210}-\u{1f23b}\u{1f240}-\u{1f248}\u{1f250}\u{1f251}\u{1f260}-\u{1f265}\u{1f300}-\u{1f3fa}\u{1f400}-\u{1f6d7}\u{1f6e0}-\u{1f6ec}\u{1f6f0}-\u{1f6fc}\u{1f700}-\u{1f773}\u{1f780}-\u{1f7d8}\u{1f7e0}-\u{1f7eb}\u{1f800}-\u{1f80b}\u{1f810}-\u{1f847}\u{1f850}-\u{1f859}\u{1f860}-\u{1f887}\u{1f890}-\u{1f8ad}\u{1f8b0}\u{1f8b1}\u{1f900}-\u{1f978}\u{1f97a}-\u{1f9cb}\u{1f9cd}-\u{1fa53}\u{1fa60}-\u{1fa6d}\u{1fa70}-\u{1fa74}\u{1fa78}-\u{1fa7a}\u{1fa80}-\u{1fa86}\u{1fa90}-\u{1faa8}\u{1fab0}-\u{1fab6}\u{1fac0}-\u{1fac2}\u{1fad0}-\u{1fad6}\u{1fb00}-\u{1fb92}\u{1fb94}-\u{1fbca}\u{20000}\u{2a6dd}\u{2a700}\u{2b734}\u{2b740}\u{2b81d}\u{2b820}\u{2cea1}\u{2ceb0}\u{2ebe0}\u{2f800}-\u{2fa1d}\u{30000}\u{3134a}]';
const id_high = '[\x41-\x5a\xc0-\xd6\xd8-\xde\u0100\u0102\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132\u0134\u0136\u0139\u013b\u013d\u013f\u0141\u0143\u0145\u0147\u014a\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c\u015e\u0160\u0162\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174\u0176\u0178\u0179\u017b\u017d\u0181\u0182\u0184\u0186\u0187\u0189-\u018b\u018e-\u0191\u0193\u0194\u0196-\u0198\u019c\u019d\u019f\u01a0\u01a2\u01a4\u01a6\u01a7\u01a9\u01ac\u01ae\u01af\u01b1-\u01b3\u01b5\u01b7\u01b8\u01bc\u01c4\u01c5\u01c7\u01c8\u01ca\u01cb\u01cd\u01cf\u01d1\u01d3\u01d5\u01d7\u01d9\u01db\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec\u01ee\u01f1\u01f2\u01f4\u01f6-\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204\u0206\u0208\u020a\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c\u021e\u0220\u0222\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u023a\u023b\u023d\u023e\u0241\u0243-\u0246\u0248\u024a\u024c\u024e\u0370\u0372\u0376\u037f\u0386\u0388-\u038a\u038c\u038e\u038f\u0391-\u03a1\u03a3-\u03ab\u03cf\u03d2-\u03d4\u03d8\u03da\u03dc\u03de\u03e0\u03e2\u03e4\u03e6\u03e8\u03ea\u03ec\u03ee\u03f4\u03f7\u03f9\u03fa\u03fd-\u042f\u0460\u0462\u0464\u0466\u0468\u046a\u046c\u046e\u0470\u0472\u0474\u0476\u0478\u047a\u047c\u047e\u0480\u048a\u048c\u048e\u0490\u0492\u0494\u0496\u0498\u049a\u049c\u049e\u04a0\u04a2\u04a4\u04a6\u04a8\u04aa\u04ac\u04ae\u04b0\u04b2\u04b4\u04b6\u04b8\u04ba\u04bc\u04be\u04c0\u04c1\u04c3\u04c5\u04c7\u04c9\u04cb\u04cd\u04d0\u04d2\u04d4\u04d6\u04d8\u04da\u04dc\u04de\u04e0\u04e2\u04e4\u04e6\u04e8\u04ea\u04ec\u04ee\u04f0\u04f2\u04f4\u04f6\u04f8\u04fa\u04fc\u04fe\u0500\u0502\u0504\u0506\u0508\u050a\u050c\u050e\u0510\u0512\u0514\u0516\u0518\u051a\u051c\u051e\u0520\u0522\u0524\u0526\u0528\u052a\u052c\u052e\u0531-\u0556\u10a0-\u10c5\u10c7\u10cd\u13a0-\u13f5\u1c90-\u1cba\u1cbd-\u1cbf\u1e00\u1e02\u1e04\u1e06\u1e08\u1e0a\u1e0c\u1e0e\u1e10\u1e12\u1e14\u1e16\u1e18\u1e1a\u1e1c\u1e1e\u1e20\u1e22\u1e24\u1e26\u1e28\u1e2a\u1e2c\u1e2e\u1e30\u1e32\u1e34\u1e36\u1e38\u1e3a\u1e3c\u1e3e\u1e40\u1e42\u1e44\u1e46\u1e48\u1e4a\u1e4c\u1e4e\u1e50\u1e52\u1e54\u1e56\u1e58\u1e5a\u1e5c\u1e5e\u1e60\u1e62\u1e64\u1e66\u1e68\u1e6a\u1e6c\u1e6e\u1e70\u1e72\u1e74\u1e76\u1e78\u1e7a\u1e7c\u1e7e\u1e80\u1e82\u1e84\u1e86\u1e88\u1e8a\u1e8c\u1e8e\u1e90\u1e92\u1e94\u1e9e\u1ea0\u1ea2\u1ea4\u1ea6\u1ea8\u1eaa\u1eac\u1eae\u1eb0\u1eb2\u1eb4\u1eb6\u1eb8\u1eba\u1ebc\u1ebe\u1ec0\u1ec2\u1ec4\u1ec6\u1ec8\u1eca\u1ecc\u1ece\u1ed0\u1ed2\u1ed4\u1ed6\u1ed8\u1eda\u1edc\u1ede\u1ee0\u1ee2\u1ee4\u1ee6\u1ee8\u1eea\u1eec\u1eee\u1ef0\u1ef2\u1ef4\u1ef6\u1ef8\u1efa\u1efc\u1efe\u1f08-\u1f0f\u1f18-\u1f1d\u1f28-\u1f2f\u1f38-\u1f3f\u1f48-\u1f4d\u1f59\u1f5b\u1f5d\u1f5f\u1f68-\u1f6f\u1f88-\u1f8f\u1f98-\u1f9f\u1fa8-\u1faf\u1fb8-\u1fbc\u1fc8-\u1fcc\u1fd8-\u1fdb\u1fe8-\u1fec\u1ff8-\u1ffc\u2102\u2107\u210b-\u210d\u2110-\u2112\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u2130-\u2133\u213e\u213f\u2145\u2183\u2c00-\u2c2e\u2c60\u2c62-\u2c64\u2c67\u2c69\u2c6b\u2c6d-\u2c70\u2c72\u2c75\u2c7e-\u2c80\u2c82\u2c84\u2c86\u2c88\u2c8a\u2c8c\u2c8e\u2c90\u2c92\u2c94\u2c96\u2c98\u2c9a\u2c9c\u2c9e\u2ca0\u2ca2\u2ca4\u2ca6\u2ca8\u2caa\u2cac\u2cae\u2cb0\u2cb2\u2cb4\u2cb6\u2cb8\u2cba\u2cbc\u2cbe\u2cc0\u2cc2\u2cc4\u2cc6\u2cc8\u2cca\u2ccc\u2cce\u2cd0\u2cd2\u2cd4\u2cd6\u2cd8\u2cda\u2cdc\u2cde\u2ce0\u2ce2\u2ceb\u2ced\u2cf2\ua640\ua642\ua644\ua646\ua648\ua64a\ua64c\ua64e\ua650\ua652\ua654\ua656\ua658\ua65a\ua65c\ua65e\ua660\ua662\ua664\ua666\ua668\ua66a\ua66c\ua680\ua682\ua684\ua686\ua688\ua68a\ua68c\ua68e\ua690\ua692\ua694\ua696\ua698\ua69a\ua722\ua724\ua726\ua728\ua72a\ua72c\ua72e\ua732\ua734\ua736\ua738\ua73a\ua73c\ua73e\ua740\ua742\ua744\ua746\ua748\ua74a\ua74c\ua74e\ua750\ua752\ua754\ua756\ua758\ua75a\ua75c\ua75e\ua760\ua762\ua764\ua766\ua768\ua76a\ua76c\ua76e\ua779\ua77b\ua77d\ua77e\ua780\ua782\ua784\ua786\ua78b\ua78d\ua790\ua792\ua796\ua798\ua79a\ua79c\ua79e\ua7a0\ua7a2\ua7a4\ua7a6\ua7a8\ua7aa-\ua7ae\ua7b0-\ua7b4\ua7b6\ua7b8\ua7ba\ua7bc\ua7be\ua7c2\ua7c4-\ua7c7\ua7c9\ua7f5\uff21-\uff3a\u{10400}-\u{10427}\u{104b0}-\u{104d3}\u{10c80}-\u{10cb2}\u{118a0}-\u{118bf}\u{16e40}-\u{16e5f}\u{1d400}-\u{1d419}\u{1d434}-\u{1d44d}\u{1d468}-\u{1d481}\u{1d49c}\u{1d49e}\u{1d49f}\u{1d4a2}\u{1d4a5}\u{1d4a6}\u{1d4a9}-\u{1d4ac}\u{1d4ae}-\u{1d4b5}\u{1d4d0}-\u{1d4e9}\u{1d504}\u{1d505}\u{1d507}-\u{1d50a}\u{1d50d}-\u{1d514}\u{1d516}-\u{1d51c}\u{1d538}\u{1d539}\u{1d53b}-\u{1d53e}\u{1d540}-\u{1d544}\u{1d546}\u{1d54a}-\u{1d550}\u{1d56c}-\u{1d585}\u{1d5a0}-\u{1d5b9}\u{1d5d4}-\u{1d5ed}\u{1d608}-\u{1d621}\u{1d63c}-\u{1d655}\u{1d670}-\u{1d689}\u{1d6a8}-\u{1d6c0}\u{1d6e2}-\u{1d6fa}\u{1d71c}-\u{1d734}\u{1d756}-\u{1d76e}\u{1d790}-\u{1d7a8}\u{1d7ca}\u{1e900}-\u{1e921}]';
const id_body = '[\x30-\x39\x41-\x5a\x5f\x61-\x7a\xa6\xa9\xaa\xae\xb0\xb2\xb3\xb5\xb9\xba\xbc-\xbe\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0300-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u052f\u0531-\u0556\u0559\u0560-\u0588\u058d\u058e\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u05d0-\u05ea\u05ef-\u05f2\u060e-\u061a\u0620-\u0669\u066e-\u06d3\u06d5-\u06dc\u06de-\u06ff\u0710-\u074a\u074d-\u07b1\u07c0-\u07f6\u07fa\u07fd\u0800-\u082d\u0840-\u085b\u0860-\u086a\u08a0-\u08b4\u08b6-\u08c7\u08d3-\u08e1\u08e3-\u0963\u0966-\u096f\u0971-\u0983\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bc-\u09c4\u09c7\u09c8\u09cb-\u09ce\u09d7\u09dc\u09dd\u09df-\u09e3\u09e6-\u09f1\u09f4-\u09fa\u09fc\u09fe\u0a01-\u0a03\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a59-\u0a5c\u0a5e\u0a66-\u0a75\u0a81-\u0a83\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abc-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ad0\u0ae0-\u0ae3\u0ae6-\u0aef\u0af9-\u0aff\u0b01-\u0b03\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3c-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b5c\u0b5d\u0b5f-\u0b63\u0b66-\u0b77\u0b82\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd0\u0bd7\u0be6-\u0bf8\u0bfa\u0c00-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c58-\u0c5a\u0c60-\u0c63\u0c66-\u0c6f\u0c78-\u0c83\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbc-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0cde\u0ce0-\u0ce3\u0ce6-\u0cef\u0cf1\u0cf2\u0d00-\u0d0c\u0d0e-\u0d10\u0d12-\u0d44\u0d46-\u0d48\u0d4a-\u0d4f\u0d54-\u0d63\u0d66-\u0d7f\u0d81-\u0d83\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e01-\u0e3a\u0e40-\u0e4e\u0e50-\u0e59\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0ebd\u0ec0-\u0ec4\u0ec6\u0ec8-\u0ecd\u0ed0-\u0ed9\u0edc-\u0edf\u0f00-\u0f03\u0f13\u0f15-\u0f39\u0f3e-\u0f47\u0f49-\u0f6c\u0f71-\u0f84\u0f86-\u0f97\u0f99-\u0fbc\u0fbe-\u0fcc\u0fce\u0fcf\u0fd5-\u0fd8\u1000-\u1049\u1050-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u135d-\u135f\u1369-\u137c\u1380-\u1399\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166d\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176c\u176e-\u1770\u1772\u1773\u1780-\u17d3\u17d7\u17dc\u17dd\u17e0-\u17e9\u17f0-\u17f9\u180b-\u180d\u1810-\u1819\u1820-\u1878\u1880-\u18aa\u18b0-\u18f5\u1900-\u191e\u1920-\u192b\u1930-\u193b\u1940\u1946-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19d0-\u19da\u19de-\u1a1b\u1a20-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1aa7\u1ab0-\u1ac0\u1b00-\u1b4b\u1b50-\u1b59\u1b61-\u1b7c\u1b80-\u1bf3\u1c00-\u1c37\u1c40-\u1c49\u1c4d-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1cd0-\u1cd2\u1cd4-\u1cfa\u1d00-\u1df9\u1dfb-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u203f\u2040\u2054\u2070\u2071\u2074-\u2079\u207f-\u2089\u2090-\u209c\u20d0-\u20f0\u2100-\u2117\u2119-\u213f\u2145-\u214a\u214c-\u218b\u2195-\u2199\u219c-\u219f\u21a1\u21a2\u21a4\u21a5\u21a7-\u21ad\u21af-\u21cd\u21d0\u21d1\u21d3\u21d5-\u21f3\u2202\u2205-\u2207\u221e\u223f\u22ee-\u22f1\u2300-\u2307\u230c-\u231f\u2322-\u2328\u232b-\u237b\u237d-\u239a\u23b4-\u23db\u23e2-\u2426\u2440-\u244a\u2460-\u266e\u2670-\u2767\u2776-\u27c1\u2800-\u28ff\u29b0-\u29b5\u29bd\u29c4\u29c5\u29c8-\u29cd\u29d6\u29d7\u29dd\u29de\u29e0\u29e8-\u29f3\u2b00-\u2b2f\u2b45\u2b46\u2b4d-\u2b73\u2b76-\u2b95\u2b97-\u2c2e\u2c30-\u2c5e\u2c60-\u2cf3\u2cfd\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d7f-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2de0-\u2dff\u2e2f\u2e50\u2e51\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004-\u3007\u3012\u3013\u3020-\u302f\u3031-\u303c\u303e\u303f\u3041-\u3096\u3099\u309a\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u3190-\u31e3\u31f0-\u321e\u3220-\u3400\u4dbf-\u4e00\u9ffc\ua000-\ua48c\ua490-\ua4c6\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua62b\ua640-\ua672\ua674-\ua67d\ua67f-\ua6f1\ua717-\ua71f\ua722-\ua788\ua78b-\ua7bf\ua7c2-\ua7ca\ua7f5-\ua82c\ua830-\ua837\ua839\ua840-\ua873\ua880-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f7\ua8fb\ua8fd-\ua92d\ua930-\ua953\ua960-\ua97c\ua980-\ua9c0\ua9cf-\ua9d9\ua9e0-\ua9fe\uaa00-\uaa36\uaa40-\uaa4d\uaa50-\uaa59\uaa60-\uaac2\uaadb-\uaadd\uaae0-\uaaef\uaaf2-\uaaf6\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabea\uabec\uabed\uabf0-\uabf9\uac00\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufdfd\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\ufe70-\ufe74\ufe76-\ufefc\uff10-\uff19\uff21-\uff3a\uff3f\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc\uffe4\uffe8\uffed\uffee\ufffc\ufffd\u{10000}-\u{1000b}\u{1000d}-\u{10026}\u{10028}-\u{1003a}\u{1003c}\u{1003d}\u{1003f}-\u{1004d}\u{10050}-\u{1005d}\u{10080}-\u{100fa}\u{10107}-\u{10133}\u{10137}-\u{1018e}\u{10190}-\u{1019c}\u{101a0}\u{101d0}-\u{101fd}\u{10280}-\u{1029c}\u{102a0}-\u{102d0}\u{102e0}-\u{102fb}\u{10300}-\u{10323}\u{1032d}-\u{1034a}\u{10350}-\u{1037a}\u{10380}-\u{1039d}\u{103a0}-\u{103c3}\u{103c8}-\u{103cf}\u{103d1}-\u{103d5}\u{10400}-\u{1049d}\u{104a0}-\u{104a9}\u{104b0}-\u{104d3}\u{104d8}-\u{104fb}\u{10500}-\u{10527}\u{10530}-\u{10563}\u{10600}-\u{10736}\u{10740}-\u{10755}\u{10760}-\u{10767}\u{10800}-\u{10805}\u{10808}\u{1080a}-\u{10835}\u{10837}\u{10838}\u{1083c}\u{1083f}-\u{10855}\u{10858}-\u{1089e}\u{108a7}-\u{108af}\u{108e0}-\u{108f2}\u{108f4}\u{108f5}\u{108fb}-\u{1091b}\u{10920}-\u{10939}\u{10980}-\u{109b7}\u{109bc}-\u{109cf}\u{109d2}-\u{10a03}\u{10a05}\u{10a06}\u{10a0c}-\u{10a13}\u{10a15}-\u{10a17}\u{10a19}-\u{10a35}\u{10a38}-\u{10a3a}\u{10a3f}-\u{10a48}\u{10a60}-\u{10a7e}\u{10a80}-\u{10a9f}\u{10ac0}-\u{10ae6}\u{10aeb}-\u{10aef}\u{10b00}-\u{10b35}\u{10b40}-\u{10b55}\u{10b58}-\u{10b72}\u{10b78}-\u{10b91}\u{10ba9}-\u{10baf}\u{10c00}-\u{10c48}\u{10c80}-\u{10cb2}\u{10cc0}-\u{10cf2}\u{10cfa}-\u{10d27}\u{10d30}-\u{10d39}\u{10e60}-\u{10e7e}\u{10e80}-\u{10ea9}\u{10eab}\u{10eac}\u{10eb0}\u{10eb1}\u{10f00}-\u{10f27}\u{10f30}-\u{10f54}\u{10fb0}-\u{10fcb}\u{10fe0}-\u{10ff6}\u{11000}-\u{11046}\u{11052}-\u{1106f}\u{1107f}-\u{110ba}\u{110d0}-\u{110e8}\u{110f0}-\u{110f9}\u{11100}-\u{11134}\u{11136}-\u{1113f}\u{11144}-\u{11147}\u{11150}-\u{11173}\u{11176}\u{11180}-\u{111c4}\u{111c9}-\u{111cc}\u{111ce}-\u{111da}\u{111dc}\u{111e1}-\u{111f4}\u{11200}-\u{11211}\u{11213}-\u{11237}\u{1123e}\u{11280}-\u{11286}\u{11288}\u{1128a}-\u{1128d}\u{1128f}-\u{1129d}\u{1129f}-\u{112a8}\u{112b0}-\u{112ea}\u{112f0}-\u{112f9}\u{11300}-\u{11303}\u{11305}-\u{1130c}\u{1130f}\u{11310}\u{11313}-\u{11328}\u{1132a}-\u{11330}\u{11332}\u{11333}\u{11335}-\u{11339}\u{1133b}-\u{11344}\u{11347}\u{11348}\u{1134b}-\u{1134d}\u{11350}\u{11357}\u{1135d}-\u{11363}\u{11366}-\u{1136c}\u{11370}-\u{11374}\u{11400}-\u{1144a}\u{11450}-\u{11459}\u{1145e}-\u{11461}\u{11480}-\u{114c5}\u{114c7}\u{114d0}-\u{114d9}\u{11580}-\u{115b5}\u{115b8}-\u{115c0}\u{115d8}-\u{115dd}\u{11600}-\u{11640}\u{11644}\u{11650}-\u{11659}\u{11680}-\u{116b8}\u{116c0}-\u{116c9}\u{11700}-\u{1171a}\u{1171d}-\u{1172b}\u{11730}-\u{1173b}\u{1173f}\u{11800}-\u{1183a}\u{118a0}-\u{118f2}\u{118ff}-\u{11906}\u{11909}\u{1190c}-\u{11913}\u{11915}\u{11916}\u{11918}-\u{11935}\u{11937}\u{11938}\u{1193b}-\u{11943}\u{11950}-\u{11959}\u{119a0}-\u{119a7}\u{119aa}-\u{119d7}\u{119da}-\u{119e1}\u{119e3}\u{119e4}\u{11a00}-\u{11a3e}\u{11a47}\u{11a50}-\u{11a99}\u{11a9d}\u{11ac0}-\u{11af8}\u{11c00}-\u{11c08}\u{11c0a}-\u{11c36}\u{11c38}-\u{11c40}\u{11c50}-\u{11c6c}\u{11c72}-\u{11c8f}\u{11c92}-\u{11ca7}\u{11ca9}-\u{11cb6}\u{11d00}-\u{11d06}\u{11d08}\u{11d09}\u{11d0b}-\u{11d36}\u{11d3a}\u{11d3c}\u{11d3d}\u{11d3f}-\u{11d47}\u{11d50}-\u{11d59}\u{11d60}-\u{11d65}\u{11d67}\u{11d68}\u{11d6a}-\u{11d8e}\u{11d90}\u{11d91}\u{11d93}-\u{11d98}\u{11da0}-\u{11da9}\u{11ee0}-\u{11ef6}\u{11fb0}\u{11fc0}-\u{11fdc}\u{11fe1}-\u{11ff1}\u{12000}-\u{12399}\u{12400}-\u{1246e}\u{12480}-\u{12543}\u{13000}-\u{1342e}\u{14400}-\u{14646}\u{16800}-\u{16a38}\u{16a40}-\u{16a5e}\u{16a60}-\u{16a69}\u{16ad0}-\u{16aed}\u{16af0}-\u{16af4}\u{16b00}-\u{16b36}\u{16b3c}-\u{16b43}\u{16b45}\u{16b50}-\u{16b59}\u{16b5b}-\u{16b61}\u{16b63}-\u{16b77}\u{16b7d}-\u{16b8f}\u{16e40}-\u{16e96}\u{16f00}-\u{16f4a}\u{16f4f}-\u{16f87}\u{16f8f}-\u{16f9f}\u{16fe0}\u{16fe1}\u{16fe3}\u{16fe4}\u{16ff0}\u{16ff1}\u{17000}\u{187f7}\u{18800}-\u{18cd5}\u{18d00}\u{18d08}\u{1b000}-\u{1b11e}\u{1b150}-\u{1b152}\u{1b164}-\u{1b167}\u{1b170}-\u{1b2fb}\u{1bc00}-\u{1bc6a}\u{1bc70}-\u{1bc7c}\u{1bc80}-\u{1bc88}\u{1bc90}-\u{1bc99}\u{1bc9c}-\u{1bc9e}\u{1d000}-\u{1d0f5}\u{1d100}-\u{1d126}\u{1d129}-\u{1d172}\u{1d17b}-\u{1d1e8}\u{1d200}-\u{1d245}\u{1d2e0}-\u{1d2f3}\u{1d300}-\u{1d356}\u{1d360}-\u{1d378}\u{1d400}-\u{1d454}\u{1d456}-\u{1d49c}\u{1d49e}\u{1d49f}\u{1d4a2}\u{1d4a5}\u{1d4a6}\u{1d4a9}-\u{1d4ac}\u{1d4ae}-\u{1d4b9}\u{1d4bb}\u{1d4bd}-\u{1d4c3}\u{1d4c5}-\u{1d505}\u{1d507}-\u{1d50a}\u{1d50d}-\u{1d514}\u{1d516}-\u{1d51c}\u{1d51e}-\u{1d539}\u{1d53b}-\u{1d53e}\u{1d540}-\u{1d544}\u{1d546}\u{1d54a}-\u{1d550}\u{1d552}-\u{1d6a5}\u{1d6a8}-\u{1d6c0}\u{1d6c2}-\u{1d6da}\u{1d6dc}-\u{1d6fa}\u{1d6fc}-\u{1d714}\u{1d716}-\u{1d734}\u{1d736}-\u{1d74e}\u{1d750}-\u{1d76e}\u{1d770}-\u{1d788}\u{1d78a}-\u{1d7a8}\u{1d7aa}-\u{1d7c2}\u{1d7c4}-\u{1d7cb}\u{1d7ce}-\u{1da86}\u{1da9b}-\u{1da9f}\u{1daa1}-\u{1daaf}\u{1e000}-\u{1e006}\u{1e008}-\u{1e018}\u{1e01b}-\u{1e021}\u{1e023}\u{1e024}\u{1e026}-\u{1e02a}\u{1e100}-\u{1e12c}\u{1e130}-\u{1e13d}\u{1e140}-\u{1e149}\u{1e14e}\u{1e14f}\u{1e2c0}-\u{1e2f9}\u{1e800}-\u{1e8c4}\u{1e8c7}-\u{1e8d6}\u{1e900}-\u{1e94b}\u{1e950}-\u{1e959}\u{1ec71}-\u{1ecaf}\u{1ecb1}-\u{1ecb4}\u{1ed01}-\u{1ed3d}\u{1ee00}-\u{1ee03}\u{1ee05}-\u{1ee1f}\u{1ee21}\u{1ee22}\u{1ee24}\u{1ee27}\u{1ee29}-\u{1ee32}\u{1ee34}-\u{1ee37}\u{1ee39}\u{1ee3b}\u{1ee42}\u{1ee47}\u{1ee49}\u{1ee4b}\u{1ee4d}-\u{1ee4f}\u{1ee51}\u{1ee52}\u{1ee54}\u{1ee57}\u{1ee59}\u{1ee5b}\u{1ee5d}\u{1ee5f}\u{1ee61}\u{1ee62}\u{1ee64}\u{1ee67}-\u{1ee6a}\u{1ee6c}-\u{1ee72}\u{1ee74}-\u{1ee77}\u{1ee79}-\u{1ee7c}\u{1ee7e}\u{1ee80}-\u{1ee89}\u{1ee8b}-\u{1ee9b}\u{1eea1}-\u{1eea3}\u{1eea5}-\u{1eea9}\u{1eeab}-\u{1eebb}\u{1f000}-\u{1f02b}\u{1f030}-\u{1f093}\u{1f0a0}-\u{1f0ae}\u{1f0b1}-\u{1f0bf}\u{1f0c1}-\u{1f0cf}\u{1f0d1}-\u{1f0f5}\u{1f100}-\u{1f1ad}\u{1f1e6}-\u{1f202}\u{1f210}-\u{1f23b}\u{1f240}-\u{1f248}\u{1f250}\u{1f251}\u{1f260}-\u{1f265}\u{1f300}-\u{1f3fa}\u{1f400}-\u{1f6d7}\u{1f6e0}-\u{1f6ec}\u{1f6f0}-\u{1f6fc}\u{1f700}-\u{1f773}\u{1f780}-\u{1f7d8}\u{1f7e0}-\u{1f7eb}\u{1f800}-\u{1f80b}\u{1f810}-\u{1f847}\u{1f850}-\u{1f859}\u{1f860}-\u{1f887}\u{1f890}-\u{1f8ad}\u{1f8b0}\u{1f8b1}\u{1f900}-\u{1f978}\u{1f97a}-\u{1f9cb}\u{1f9cd}-\u{1fa53}\u{1fa60}-\u{1fa6d}\u{1fa70}-\u{1fa74}\u{1fa78}-\u{1fa7a}\u{1fa80}-\u{1fa86}\u{1fa90}-\u{1faa8}\u{1fab0}-\u{1fab6}\u{1fac0}-\u{1fac2}\u{1fad0}-\u{1fad6}\u{1fb00}-\u{1fb92}\u{1fb94}-\u{1fbca}\u{1fbf0}-\u{1fbf9}\u{20000}\u{2a6dd}\u{2a700}\u{2b734}\u{2b740}\u{2b81d}\u{2b820}\u{2cea1}\u{2ceb0}\u{2ebe0}\u{2f800}-\u{2fa1d}\u{30000}\u{3134a}\u{e0100}-\u{e01ef}]';
const op_mod  = '[\x60\xa8\xaf\xb4\xb8\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u309b\u309c\ua700-\ua716\ua720\ua721\ua789\ua78a\uab5b\uab6a\uab6b\ufbb2-\ufbc1\uff3e\uff40\uffe3\u{1f3fb}-\u{1f3ff}]';
const op_body = '[\x21\x24-\x26\x2a-\x2f\x3a\x3c-\x3e\x5e\x60\x7c\x7e\xa2-\xa5\xa8\xac\xaf\xb1\xb4\xb8\xd7\xf7\u02c2-\u02c5\u02d2-\u02df\u02e5-\u02eb\u02ed\u02ef-\u02ff\u0375\u0384\u0385\u058f\u0606-\u0608\u060b\u07fe\u07ff\u09f2\u09f3\u09fb\u0af1\u0bf9\u0e3f\u17db\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u2052\u207a-\u207c\u208a-\u208c\u20a0-\u20bf\u2118\u2140-\u2144\u214b\u2190-\u2194\u219a\u219b\u21a0\u21a3\u21a6\u21ae\u21ce\u21cf\u21d2\u21d4\u21f4-\u2201\u2203\u2204\u2208-\u221d\u221f-\u223e\u2240-\u22ed\u22f2-\u22ff\u2320\u2321\u237c\u239b-\u23b3\u23dc-\u23e1\u266f\u27c2-\u27c4\u27c7-\u27e5\u27f0-\u27ff\u2900-\u2982\u2999-\u29af\u29b6-\u29bc\u29be-\u29c3\u29c6\u29c7\u29ce-\u29d5\u29dc\u29df\u29e1-\u29e7\u29f4-\u29fb\u29fe-\u2aff\u2b30-\u2b44\u2b47-\u2b4c\u309b\u309c\ua700-\ua716\ua720\ua721\ua789\ua78a\ua838\uab5b\uab6a\uab6b\ufb29\ufbb2-\ufbc1\ufdfc\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe3\uffe5\uffe6\uffe9-\uffec\u{11fdd}-\u{11fe0}\u{1d6c1}\u{1d6db}\u{1d6fb}\u{1d715}\u{1d735}\u{1d74f}\u{1d76f}\u{1d789}\u{1d7a9}\u{1d7c3}\u{1e2ff}\u{1ecb0}\u{1eef0}\u{1eef1}\u{1f3fb}-\u{1f3ff}]';
const Sc = '[♯\x24\xa2-\xa5\u058f\u060b\u07fe\u07ff\u09f2\u09f3\u09fb\u0af1\u0bf9\u0e3f\u17db\u20a0-\u20bf\ua838\ufdfc\ufe69\uff04\uffe0\uffe1\uffe5\uffe6\u{11fdd}-\u{11fe0}\u{1e2ff}\u{1ecb0}]';

// !!! TODO:
// These operators should be eliminated by NFKC normalization:
//   const Sm_nfkc   = '[⁄⁺⁻⁼₊₋₌⅀−∕∖∣∤∬∭∯∰∶∼≁⨌⩴⩵⩶﬩﹢﹤﹥﹦＋＜＝＞｜～￢￩￪￫￬]';
// These operators should be remapped by operator normalization:
//   const Sm_norm   = '[؆؇⁒℘⅁⅂⅃⅄⅋∊∍∗∽∾⊝⋴⋷⋼⋾⟂⟋⟍⟘⟙⟝⟞⦀⦂⧵⧸⧹⨟⨾⫞⫟⫠]';

// Not included, because I didn't see where they fit mathematically:
//const Sm_wtf    = '[؈⊸⟓⟔⟜⟟⦙⦚⧜⧟⨞⨠⨡⫯⫰⫱]';
//const Sm_multi  = '[⌠⌡⍼⎛⎜⎝⎞⎟⎠⎡⎢⎣⎤⎥⎦⎧⎨⎩⎪⎫⎬⎭⎮⎯⎰⎱⎲⎳⏜⏝⏞⏟⏠⏡]';

function operator(category) {
  const terms = [op_mod, "*", category, op_body, "*"];
  return new RegExp(terms.join(''), 'u');
}

module.exports = grammar({
  name: 'wake',

  word: $ => $.low_identifier,
  extras: $ => [ /[ \t\xa0\u1680\u2000-\u200a\u202f\u205f\u2029]/, $._eol ],

  externals: $ => [
    $._eol,
    $._indent,
    $._dedent
  ],

  rules: {
    source_file: $ => repeat(choice(
      $.tuple,
      $.data,
      $.topic,
      $.publish,
      $.top_definition,
      $.top_target,
      $.package,
      $.import,
      $.export)),

    // Types --------------------------------------------------------------------------

    // !!! COLON
    _full_type: $ => choice(
      $._term_type,
      $.application_type,
      $.binary_type,
      $.unary_type),

    _term_type: $ => choice(
      seq('(', $._full_type, ')'),
      $._identifier),

    application_type: $ => seq($.high_identifier, repeat1($._term_type)),
    unary_type:  $ => unary_ops ($, $._full_type),
    binary_type: $ => binary_ops($, $._full_type),

    // Patterns -----------------------------------------------------------------------

    _full_pattern: $ => choice(
      $._term_pattern,
      $.application_pattern,
      $.binary_pattern,
      $.unary_pattern,
      $.hole),

    _def_pattern: $ => choice(
      $._full_pattern,
      $.low_application_pattern),

    _term_pattern: $ => choice(
      seq('(', $._full_pattern, ')'),
      $._identifier,
      $._literal),

    term_patterns: $ => repeat1($._term_pattern),

    application_pattern: $ => seq($.high_identifier, repeat1($._term_pattern)),
    low_application_pattern: $ => seq($.low_identifier, repeat1($._term_pattern)),
    unary_pattern:  $ => unary_ops ($, $._full_pattern),
    binary_pattern: $ => binary_ops($, $._full_pattern),

    // Expressions --------------------------------------------------------------------

    _full_expression: $ => choice(
      $._operator_expression,
      $.lambda_expression,
      $.if_expression),

    // !!! COLON
    _operator_expression: $ => choice(
      $._term_expression,
      $.application_expression,
      $.binary_expression,
      $.unary_expression,
      $.prim_expression,
      $.subscribe_expression,
      $.match_expression),

    _term_expression: $ => choice(
      seq('(', $.block_expression, ')'),
      $.hole,
      $._identifier,
      $._literal,
      alias($.dot_expression, $.binary_expression)),

    lambda_expression: $ => seq(
      '\\',
      field('pattern', $._term_pattern),
      field('expression', $._full_expression)),

    if_expression: $ => seq(
      'if',   field('condition', $.block_expression),
      'then', field('then',      $.block_expression),
      'else', field('else',      $.block_expression)),

    application_expression: $ => seq($._term_expression, repeat1($._term_expression)),
    unary_expression:  $ => unary_ops ($, $._operator_expression),
    binary_expression: $ => binary_ops($, $._operator_expression),
    dot_expression: $ => left(3, $.dot_op, $._term_expression),

    prim_expression: $ => seq('prim', field('name', $._string)),
    subscribe_expression: $ => seq('subscribe', field('id', $.low_identifier)),

    _block_body: $ => seq(
      field('preamble', repeat(choice($.definition, $.import, $.target))),
      field('expression', $._full_expression)),

    block_expression: $ => choice(
      field('expression', $._full_expression),
      seq($._indent, $._eol, $._block_body, $._dedent)),

    // Match expression ---------------------------------------------------------------

    // !!! multimatch
    match_expression: $ => seq(
      'match',
      field('arg', $._term_expression),
      $._indent,
      field('rules', $.match_rules),
      $._dedent),

    match_rules: $ => repeat1($.match_rule),

    match_rule: $ => seq(
      $._eol,
      field('pattern', $._full_pattern),
      field('guard', optional(alias($.match_guard, $.block_expression))),
      '=',
      field('block', $.block_expression)),

    match_guard: $ => choice(
      seq('if', $._indent, $._eol, $._block_body, $._dedent, $._eol),
      seq('if', field('expression', $._full_expression))),

    // Statements ---------------------------------------------------------------------

    global_flag: $ => 'global',
    export_flag: $ => 'export',

    top_definition: $ => seq(
      field('global', optional($.global_flag)),
      field('export', optional($.export_flag)),
      field('definition', $.definition)),

    top_target: $ => seq(
      field('global', optional($.global_flag)),
      field('export', optional($.export_flag)),
      field('target', $.target)),

    definition: $ => seq(
      'def', field('pattern', $._def_pattern),
      '=',   field('block', $.block_expression),
      $._eol),

    target: $ => seq(
      'target', field('pattern', $._def_pattern),
      field('extra_terms', optional(seq('\\', $.term_patterns))),
      '=', field('block', $.block_expression),
      $._eol),

    topic: $ => seq(
      'topic',  $.low_identifier,
      ':',      $._full_type,
      $._eol),

    publish: $ => seq(
      'publish', $.low_identifier,
      '=',       $.block_expression,
      $._eol),

    type_params: $ => repeat1($.low_identifier),

    tuple: $ => seq(
      field('global', optional($.global_flag)),
      field('export', optional($.export_flag)),
      'tuple',
      field('name', $.high_identifier),
      field('params', optional($.type_params)),
      '=',
      $._indent,
      field('fields', $.fields),
      $._dedent, $._eol),

    fields: $ => repeat1($.field),
    field: $ => seq(
      $._eol,
      field('global', optional($.global_flag)),
      field('export', optional($.export_flag)),
      field('name', $.high_identifier),
      ':',
      field('type', $._full_type)),

    // data type definitions do not allow recursion:
    _data_type: $ => choice(
      $.high_identifier,
      alias($.data_application_type, $.application_type),
      alias($.data_binary_type, $.binary_type),
      alias($.data_unary_type, $.unary_type)),
    data_application_type: $ => seq($.high_identifier, repeat1($.low_identifier)),
    data_binary_type: $ => binary_ops($, $.low_identifier),
    data_unary_type: $ => unary_ops($, $.low_identifier),

    constructors: $ => repeat1(seq($._eol, $._full_type)),
    constructor1: $ => $._full_type,
    data: $ => seq(
      field('global', optional($.global_flag)),
      field('export', optional($.export_flag)),
      'data', field('type', $._data_type),
      '=', field('constructors', choice(
        seq($._indent, $.constructors, $._dedent),
        alias($.constructor1, $.constructors))),
      $._eol),

    // Packages -----------------------------------------------------------------------

    package: $ => seq('package', field('name', $.low_identifier), $._eol),

    def_kind:   $ => 'def',
    type_kind:  $ => 'type',
    topic_kind: $ => 'topic',
    _kind: $ => choice($.def_kind, $.type_kind, $.topic_kind),

    unary_arity:  $ => 'unary',
    binary_arity: $ => 'binary',
    _arity: $ => choice($.unary_arity, $.binary_arity),

    ideq: $ => seq(
      field('to', $.low_identifier),
      optional(seq('=', field('from', $.low_identifier)))),
    ideqs: $ => repeat1($.ideq),

    import: $ => seq(
      'from', 
      field('package', $.low_identifier),
      'import',
      field('kind', optional($._kind)),
      field('arity', optional($._arity)),
      field('ideqs', choice($.hole, $.ideqs)),
      $._eol), 

    export: $ => seq(
      'from', 
      field('package', $.low_identifier),
      'export',
      field('kind', $._kind),
      field('arity', optional($._arity)),
      field('ideqs', $.ideqs),
      $._eol),

    // Lexer --------------------------------------------------------------------------

    _literal: $ => choice($.integer, $.double, $.regexp, $._string, $.here),

    hole: $ => '_',
    here: $ => 'here',

    integer: $ => {
      const decimal = '([1-9][0-9_]*)';
      const octal   = '(0[0-7_]*)';
      const hex     = '(0x[0-9a-fA-F_]+)';
      const binary  = '(0b[01_]+)';
      return new RegExp([decimal, octal, hex, binary].join('|'));
    },

    double: $ => {
      const double10  = '([0-9][0-9_]*\.[0-9_]+([eE][+-]?[0-9_]+)?)';
      const double10e = '([0-9][0-9_]*[eE][+-]?[0-9_]+)';
      const double16  = '(0x[0-9a-fA-F_]+\.[0-9a-fA-F_]+([pP][+-]?[0-9a-fA-F_]+)?)';
      const double16e = '(0x[0-9a-fA-F_]+[pP][+-]?[0-9a-fA-F_]+)';
      return new RegExp([double10, double10e, double16, double16e].join('|'));
    },

    // `regex`, but allow \` and \\ inside the string
    regexp: $ => /`[^`\\]*(\\.[^`\\]*)*`/,

    single_string: $ => /'[^']*'/,
    double_string: $ => /"[^"]*"/, // !!!
    _string: $ => choice($.single_string, $.double_string),

    dot_op:         $ => operator('[.]'),
    composition_op: $ => operator('[∘⊚⋆⦾⧇]'),
    unary_fn_op:    $ => operator('[√∛∜]'),
    exponent_op:    $ => operator('\\^'),
    muldiv_op:      $ => operator('[*/%∏⋂⨀⨂⨅⨉∐÷⊘⟌⦸⦼⧶⧷⨸⫻⫽×∙∩≀⊓⊗⊙⊛⊠⊡⋄⋅⋇⋈⋉⋊⋋⋌⋒⟐⟕⟖⟗⟡⦁⦻⦿⧆⧑⧒⧓⧔⧕⧢⨝⨯⨰⨱⨲⨳⨴⨵⨶⨷⨻⨼⨽⩀⩃⩄⩋⩍⩎]'),
    addsub_op:      $ => operator('[-+~∑∫∮∱∲∳⋃⨁⨃⨄⨆⨊⨋⨍⨎⨏⨐⨑⨒⨓⨔⨕⨖⨗⨘⨙⨚⨛⨜⫿¬±∓∔∪∸∸∹∺∻≂⊌⊍⊎⊔⊕⊖⊞⊟⊹⊻⋓⧺⧻⧾⧿⨢⨣⨤⨥⨦⨧⨨⨩⨪⨫⨬⨭⨮⨹⨺⨿⩁⩂⩅⩊⩌⩏⩐⩪⩫⫬⫭⫾]'),
    comparison_op:  $ => operator('[<>≤≦≨≪≮≰≲≴≶≸≺≼≾⊀⊂⊄⊆⊈⊊⊏⊑⊰⊲⊴⊷⋐⋖⋘⋚⋜⋞⋠⋢⋤⋦⋨⋪⋬⟃⟈⧀⧏⧡⩹⩻⩽⩿⪁⪃⪅⪇⪉⪋⪍⪏⪑⪓⪕⪗⪙⪛⪝⪟⪡⪣⪦⪨⪪⪬⪯⪱⪳⪵⪷⪹⪻⪽⪿⫁⫃⫅⫇⫉⫋⫍⫏⫑⫓⫕⫷⫹≥≧≩≫≯≱≳≵≷≹≻≽≿⊁⊃⊅⊇⊉⊋⊐⊒⊱⊳⊵⊶⋑⋗⋙⋛⋝⋟⋡⋣⋥⋧⋩⋫⋭⟄⟉⧁⧐⩺⩼⩾⪀⪂⪄⪆⪈⪊⪌⪎⪐⪒⪔⪖⪘⪚⪜⪞⪠⪢⪧⪩⪫⪭⪰⪲⪴⪶⪸⪺⪼⪾⫀⫂⫄⫆⫈⫊⫌⫎⫐⫒⫔⫖⫸⫺∈∉∋∌∝∟∠∡∢∥∦≬⊾⊿⋔⋲⋳⋵⋶⋸⋹⋺⋻⋽⋿⍼⟊⟒⦛⦜⦝⦞⦟⦠⦡⦢⦣⦤⦥⦦⦧⦨⦩⦪⦫⦬⦭⦮⦯⦶⦷⦹⦺⩤⩥⫙⫚⫛⫝̸⫝⫡⫮⫲⫳⫴⫵⫶⫼]'),
    inequality_op:  $ => operator('[!==≃≄≅≆≇≈≉≊≋≌≍≎≏≐≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟≠≡≢≣≭⊜⋍⋕⧂⧃⧎⧣⧤⧥⧦⧧⩆⩇⩈⩉⩙⩦⩧⩨⩩⩬⩭⩮⩯⩰⩱⩲⩳⩷⩸⪤⪥⪮⫗⫘]'),
    and_op:         $ => operator('[&∧⊼⋏⟎⟑⨇⩑⩓⩕⩘⩚⩜⩞⩞⩟⩟⩠⩠⋀]'),
    or_op:          $ => operator('[|∨⊽⋎⟇⟏⨈⩒⩔⩖⩗⩛⩝⩡⩢⩣⋁]'),
    currency_op:    $ => operator(Sc),
    lr_arrow_op:    $ => operator('[←↑↚⇷⇺⇽⊣⊥⟣⟥⟰⟲⟵⟸⟻⟽⤂⤆⤉⤊⤌⤎⤒⤙⤛⤝⤟⤣⤦⤧⤪⤱⤲⤴⤶⤺⤽⤾⥀⥃⥄⥆⥉⥒⥔⥖⥘⥚⥜⥞⥠⥢⥣⥪⥫⥳⥶⥷⥺⥻⥼⥾⫣⫤⫥⫨⫫⬰⬱⬲⬳⬴⬵⬶⬷⬸⬹⬺⬻⬼⬽⬾⬿⭀⭁⭂⭉⭊⭋→↓↛↠↣↦⇏⇒⇴⇶⇸⇻⇾⊢⊤⊦⊧⊨⊩⊪⊫⊬⊭⊮⊯⊺⟢⟤⟱⟳⟴⟶⟹⟼⟾⟿⤀⤁⤃⤅⤇⤈⤋⤍⤏⤐⤑⤓⤔⤕⤖⤗⤘⤚⤜⤞⤠⤤⤥⤨⤩⤭⤮⤯⤰⤳⤵⤷⤸⤹⤻⤼⤿⥁⥂⥅⥇⥓⥕⥗⥙⥛⥝⥟⥡⥤⥥⥬⥭⥰⥱⥲⥴⥵⥸⥹⥽⥿⧴⫢⫦⫧⫪⭃⭄⭇⭈⭌]'),
    bi_arrow_op:    $ => operator('[↔↮⇎⇔⇵⇹⇼⇿⟚⟛⟠⟷⟺⤄⤡⤢⤫⤬⥈⥊⥋⥌⥍⥎⥏⥐⥑⥦⥧⥨⥩⥮⥯⫩]'),
    quantifier_op:  $ => operator('[∀∁∃∄∎∴∵∷]'),
    colon_op:       $ => operator('[:]'),
    comma_op:       $ => operator('[,]'),

    low_identifier:  $ => {
      const terms = [id_mod, "*", id_low, id_body, "*"];
      return new RegExp(terms.join(''), 'u');
    },

    high_identifier: $ => {
      const terms = [id_mod, "*", id_high, id_body, "*"];
      return new RegExp(terms.join(''), 'u');
    },

    _identifier: $ => choice($.low_identifier, $.high_identifier),
  }
});
